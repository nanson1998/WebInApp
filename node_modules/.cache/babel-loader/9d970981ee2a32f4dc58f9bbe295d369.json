{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { AppZaloPayConfig } from \"../../lib/config/keys\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { useFullPaymentStore } from \"./store\";\n\nconst moment = require('moment');\n\nconst CryptoJS = require('crypto-js'); // npm install crypto-js\n\n\nconst queryString = require('query-string');\n\nconst parsed = queryString.parse(window.location.search);\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    padding: \"3rem\"\n  },\n  form: {\n    width: \"100%\"\n  },\n  input: {\n    margin: \"20px 0\",\n    \"& input:valid + fieldset\": {\n      borderColor: \"#008fe5\",\n      borderWidth: 1\n    },\n    \"& input:focus + fieldset\": {\n      borderColor: \"#008fe5 !important\",\n      borderWidth: 1\n    },\n    \"& input:invalid + fieldset\": {\n      borderColor: \"#ff6767\",\n      borderWidth: 1\n    }\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  pay: {\n    padding: \"16px 0\",\n    boxShadow: \"none\",\n    backgroundColor: \"#008fe5\",\n    color: \"#f9f9f9\",\n    \"&:hover\": {\n      boxShadow: \"none\",\n      backgroundColor: \"#008fe5\",\n      color: \"#f9f9f9\"\n    }\n  },\n  clear: {\n    padding: \"16px 0\",\n    color: \"#6093ff\",\n    textTransform: \"inherit\"\n  }\n})); // @ts-ignore\n\nasync function CreateOrderAPI() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    app,\n    setAppID,\n    appUser,\n    setAppUser,\n    amount,\n    setAmount,\n    embedData,\n    setEmbedData,\n    item,\n    setItem,\n    mac,\n    setMac\n  } = useFullPaymentStore();\n  const [result, setResult] = useState(\"\");\n  const transID = Math.floor(Math.random() * 1000000); //yyMMdd_xxxx\n\n  useEffect(() => {\n    if (typeof parsed.appid === 'string') {\n      setAppID(parsed.appid);\n    }\n\n    if (typeof parsed.appuser === 'string') {\n      setAppUser(parsed.appuser);\n    }\n\n    if (typeof parsed.apptime === 'string') {\n      setAppTime(parsed.apptime);\n    }\n\n    if (typeof parsed.amount === 'string') {\n      setAmount(parsed.amount);\n    }\n\n    if (typeof parsed.apptransid === 'string') {\n      setAppTransID(parsed.apptransid);\n    }\n\n    if (typeof parsed.embeddata === 'string') {\n      setEmbedData(parsed.embeddata);\n    }\n\n    if (typeof parsed.item === 'string') {\n      setItem(parsed.item);\n    }\n\n    if (typeof parsed.description === 'string') {\n      setDescription(parsed.description);\n    }\n\n    if (typeof parsed.mac === 'string') {\n      setMac(parsed.mac);\n    }\n\n    if (typeof parsed.subappid === 'string') {\n      setsubAppID(parsed.subappid);\n    }\n\n    if (typeof parsed.subappuser === 'string') {\n      setSubAppUser(parsed.subappuser);\n    }\n  }, []);\n\n  const handleAppOnChange = e => {\n    setAppID(e.target.value);\n  };\n\n  const handleAppUserChange = e => {\n    setAppUser(e.target.value);\n  };\n\n  const handleAppTimeChange = e => {\n    setAppTime(e.target.value);\n  };\n\n  const handleAmountChange = e => {\n    setAmount(e.target.value);\n  };\n\n  const handleAppTransIDChange = e => {\n    setAppTransID(e.target.value);\n  };\n\n  const handleEmbedDataChange = e => {\n    setEmbedData(e.target.value);\n  };\n\n  const handleItemChange = e => {\n    setItem(e.target.value);\n  };\n\n  const handleDescriptionChange = e => {\n    setDescription(e.target.value);\n  };\n\n  const handleMacChange = e => {\n    setMac(e.target.value);\n  };\n\n  const handleSubAppIDChange = e => {\n    setsubAppID(e.target.value);\n  };\n\n  const handleSubAppUserChange = e => {\n    setSubAppUser(e.target.value);\n  };\n\n  const order = {\n    app_id: AppZaloPayConfig.AppId,\n    app_trans_id: `${moment().format('YYMMDD')}_${transID}`,\n    // translation missing: vi.docs.shared.sample_code.comments.app_trans_id\n    app_user: \"user123\",\n    app_time: Date.now(),\n    // miliseconds\n    item: '[]',\n    embed_data: '{}',\n    amount: 50000,\n    description: `ZaloPay - Payment for the order #${transID}`,\n    bank_code: \"zalopayapp\",\n    mac: \"\"\n  }; // appid|app_trans_id|appuser|amount|apptime|embeddata|item\n\n  const data = AppZaloPayConfig.AppId + \"|\" + order.app_trans_id + \"|\" + order.app_user + \"|\" + order.amount + \"|\" + order.app_time + \"|\" + order.embed_data + \"|\" + order.item;\n  order.mac = CryptoJS.HmacSHA256(data, AppZaloPayConfig.Key1).toString();\n\n  try {\n    const response = await axios.post(AppZaloPayConfig.Endpoint, order, {\n      timeout: 3000\n    });\n    return response.data;\n  } catch (err) {\n    console.log(\"err:\", err);\n    return Promise.reject(err);\n  }\n}\n\n_s(CreateOrderAPI, \"M/WlBKOOyMzjOxeZvbbd+hBU19w=\", false, function () {\n  return [useStyles, useFullPaymentStore];\n});\n\n_c = CreateOrderAPI;\nexport default CreateOrderAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateOrderAPI\");","map":{"version":3,"sources":["/Users/lap12580/Documents/WebviewAndroid/src/components/createorder/create-order.tsx"],"names":["useEffect","useState","axios","AppZaloPayConfig","createStyles","makeStyles","useFullPaymentStore","moment","require","CryptoJS","queryString","parsed","parse","window","location","search","useStyles","theme","root","padding","form","width","input","margin","borderColor","borderWidth","spacing","pay","boxShadow","backgroundColor","color","clear","textTransform","CreateOrderAPI","classes","app","setAppID","appUser","setAppUser","amount","setAmount","embedData","setEmbedData","item","setItem","mac","setMac","result","setResult","transID","Math","floor","random","appid","appuser","apptime","setAppTime","apptransid","setAppTransID","embeddata","description","setDescription","subappid","setsubAppID","subappuser","setSubAppUser","handleAppOnChange","e","target","value","handleAppUserChange","handleAppTimeChange","handleAmountChange","handleAppTransIDChange","handleEmbedDataChange","handleItemChange","handleDescriptionChange","handleMacChange","handleSubAppIDChange","handleSubAppUserChange","order","app_id","AppId","app_trans_id","format","app_user","app_time","Date","now","embed_data","bank_code","data","HmacSHA256","Key1","toString","response","post","Endpoint","timeout","err","console","log","Promise","reject"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {AppZaloPayConfig} from \"../../lib/config/keys\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { useFullPaymentStore } from \"./store\";\n\nconst moment = require('moment');\n\nconst CryptoJS = require('crypto-js'); // npm install crypto-js\nconst queryString = require('query-string');\nconst parsed = queryString.parse(window.location.search);\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: \"3rem\",\n        },\n        form: {\n            width: \"100%\",\n        },\n        input: {\n            margin: \"20px 0\",\n            \"& input:valid + fieldset\": {\n                borderColor: \"#008fe5\",\n                borderWidth: 1,\n            },\n            \"& input:focus + fieldset\": {\n                borderColor: \"#008fe5 !important\",\n                borderWidth: 1,\n            },\n            \"& input:invalid + fieldset\": {\n                borderColor: \"#ff6767\",\n                borderWidth: 1,\n            },\n        },\n\n        margin: {\n            margin: theme.spacing(1),\n        },\n\n        pay: {\n            padding: \"16px 0\",\n            boxShadow: \"none\",\n            backgroundColor: \"#008fe5\",\n            color: \"#f9f9f9\",\n            \"&:hover\": {\n                boxShadow: \"none\",\n                backgroundColor: \"#008fe5\",\n                color: \"#f9f9f9\",\n            },\n        },\n        clear: {\n            padding: \"16px 0\",\n            color: \"#6093ff\",\n            textTransform: \"inherit\",\n        },\n    })\n);\n// @ts-ignore\nasync function CreateOrderAPI(){\n    const classes = useStyles();\n    const { app, setAppID, appUser, setAppUser,  amount, setAmount, embedData, setEmbedData, item, setItem,  mac, setMac } = useFullPaymentStore();\n    const [result, setResult] = useState<string>(\"\");\n    const transID = Math.floor(Math.random() * 1000000); //yyMMdd_xxxx\n    useEffect(() => {\n\n        if (typeof parsed.appid === 'string') {\n            setAppID(parsed.appid)\n        }\n        if (typeof parsed.appuser === 'string') {\n            setAppUser(parsed.appuser)\n        }\n        if (typeof parsed.apptime === 'string') {\n            setAppTime(parsed.apptime)\n        }\n        if (typeof parsed.amount === 'string') {\n            setAmount(parsed.amount)\n        }\n        if (typeof parsed.apptransid === 'string') {\n            setAppTransID(parsed.apptransid)\n        }\n        if (typeof parsed.embeddata === 'string') {\n            setEmbedData(parsed.embeddata)\n        }\n        if (typeof parsed.item === 'string') {\n            setItem(parsed.item)\n        }\n        if (typeof parsed.description === 'string') {\n            setDescription(parsed.description)\n        }\n        if (typeof parsed.mac === 'string') {\n            setMac(parsed.mac)\n        }\n        if (typeof parsed.subappid === 'string') {\n            setsubAppID(parsed.subappid)\n        }\n        if (typeof parsed.subappuser === 'string') {\n            setSubAppUser(parsed.subappuser)\n        }\n    }, [])\n\n    const handleAppOnChange = (e: any) => {\n        setAppID(e.target.value);\n    };\n\n    const handleAppUserChange = (e: any) => {\n        setAppUser(e.target.value);\n    };\n\n    const handleAppTimeChange = (e: any) => {\n        setAppTime(e.target.value);\n    };\n\n    const handleAmountChange = (e: any) => {\n        setAmount(e.target.value);\n    };\n\n    const handleAppTransIDChange = (e: any) => {\n        setAppTransID(e.target.value);\n    };\n\n    const handleEmbedDataChange = (e: any) => {\n        setEmbedData(e.target.value);\n    };\n\n    const handleItemChange = (e: any) => {\n        setItem(e.target.value);\n    };\n\n    const handleDescriptionChange = (e: any) => {\n        setDescription(e.target.value);\n    };\n\n    const handleMacChange = (e: any) => {\n        setMac(e.target.value);\n    };\n\n    const handleSubAppIDChange = (e: any) => {\n        setsubAppID(e.target.value);\n    };\n\n    const handleSubAppUserChange = (e: any) => {\n        setSubAppUser(e.target.value);\n    };\n    const order = {\n        app_id: AppZaloPayConfig.AppId,\n        app_trans_id: `${moment().format('YYMMDD')}_${transID}`, // translation missing: vi.docs.shared.sample_code.comments.app_trans_id\n        app_user: \"user123\",\n        app_time: Date.now(), // miliseconds\n        item: '[]',\n        embed_data: '{}',\n        amount: 50000,\n        description: `ZaloPay - Payment for the order #${transID}`,\n        bank_code: \"zalopayapp\",\n        mac: \"\",\n    };\n\n    // appid|app_trans_id|appuser|amount|apptime|embeddata|item\n    const data = AppZaloPayConfig.AppId + \"|\" + order.app_trans_id + \"|\" + order.app_user + \"|\" + order.amount + \"|\" + order.app_time + \"|\" + order.embed_data + \"|\" + order.item;\n    order.mac = CryptoJS.HmacSHA256(data, AppZaloPayConfig.Key1).toString();\n\n    try {\n        const response = await axios.post(AppZaloPayConfig.Endpoint, order, {timeout: 3000});\n\n        return response.data;\n    } catch (err) {\n        console.log(\"err:\", err)\n        return Promise.reject(err);\n    }\n}\n\nexport default CreateOrderAPI;\n"]},"metadata":{},"sourceType":"module"}