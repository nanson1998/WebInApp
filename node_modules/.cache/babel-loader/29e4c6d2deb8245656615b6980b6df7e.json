{"ast":null,"code":"import axios from \"axios\";\nimport { AppZaloPayConfig } from \"../../lib/config/keys\";\n\nconst moment = require('moment');\n\nconst CryptoJS = require('crypto-js'); // npm install crypto-js\n// @ts-ignore\n\n\nasync function CreateOrderAPI() {\n  const transID = Math.floor(Math.random() * 1000000); //yyMMdd_xxxx\n\n  const order = {\n    app_id: AppZaloPayConfig.AppId,\n    app_trans_id: `${moment().format('YYMMDD')}_${transID}`,\n    // translation missing: vi.docs.shared.sample_code.comments.app_trans_id\n    app_user: \"user123\",\n    app_time: Date.now(),\n    // miliseconds\n    item: '[]',\n    embed_data: '{}',\n    amount: 50000,\n    description: `ZaloPay - Payment for the order #${transID}`,\n    bank_code: \"zalopayapp\",\n    mac: \"\"\n  }; // appid|app_trans_id|appuser|amount|apptime|embeddata|item\n\n  const data = AppZaloPayConfig.AppId + \"|\" + order.app_trans_id + \"|\" + order.app_user + \"|\" + order.amount + \"|\" + order.app_time + \"|\" + order.embed_data + \"|\" + order.item;\n  order.mac = CryptoJS.HmacSHA256(data, AppZaloPayConfig.Key1).toString();\n\n  try {\n    const response = await axios.post(AppZaloPayConfig.Endpoint, order, {\n      timeout: 3000\n    });\n    return response.data;\n  } catch (err) {\n    console.log(\"err:\", err);\n    return Promise.reject(err);\n  }\n}\n\n_c = CreateOrderAPI;\nexport default CreateOrderAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateOrderAPI\");","map":{"version":3,"sources":["/Users/lap12580/Documents/webInApp/src/components/createorder/create-order.tsx"],"names":["axios","AppZaloPayConfig","moment","require","CryptoJS","CreateOrderAPI","transID","Math","floor","random","order","app_id","AppId","app_trans_id","format","app_user","app_time","Date","now","item","embed_data","amount","description","bank_code","mac","data","HmacSHA256","Key1","toString","response","post","Endpoint","timeout","err","console","log","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,QAA+B,uBAA/B;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB,C,CAAuC;AACvC;;;AACA,eAAeE,cAAf,GAA8C;AAE1C,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,CAAhB,CAF0C,CAEW;;AACrD,QAAMC,KAAK,GAAG;AACVC,IAAAA,MAAM,EAAEV,gBAAgB,CAACW,KADf;AAEVC,IAAAA,YAAY,EAAG,GAAEX,MAAM,GAAGY,MAAT,CAAgB,QAAhB,CAA0B,IAAGR,OAAQ,EAF5C;AAE+C;AACzDS,IAAAA,QAAQ,EAAE,SAHA;AAIVC,IAAAA,QAAQ,EAAEC,IAAI,CAACC,GAAL,EAJA;AAIY;AACtBC,IAAAA,IAAI,EAAE,IALI;AAMVC,IAAAA,UAAU,EAAE,IANF;AAOVC,IAAAA,MAAM,EAAE,KAPE;AAQVC,IAAAA,WAAW,EAAG,oCAAmChB,OAAQ,EAR/C;AASViB,IAAAA,SAAS,EAAE,YATD;AAUVC,IAAAA,GAAG,EAAE;AAVK,GAAd,CAH0C,CAgB1C;;AACA,QAAMC,IAAI,GAAGxB,gBAAgB,CAACW,KAAjB,GAAyB,GAAzB,GAA+BF,KAAK,CAACG,YAArC,GAAoD,GAApD,GAA0DH,KAAK,CAACK,QAAhE,GAA2E,GAA3E,GAAiFL,KAAK,CAACW,MAAvF,GAAgG,GAAhG,GAAsGX,KAAK,CAACM,QAA5G,GAAuH,GAAvH,GAA6HN,KAAK,CAACU,UAAnI,GAAgJ,GAAhJ,GAAsJV,KAAK,CAACS,IAAzK;AACAT,EAAAA,KAAK,CAACc,GAAN,GAAYpB,QAAQ,CAACsB,UAAT,CAAoBD,IAApB,EAA0BxB,gBAAgB,CAAC0B,IAA3C,EAAiDC,QAAjD,EAAZ;;AAEA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,IAAN,CAAW7B,gBAAgB,CAAC8B,QAA5B,EAAsCrB,KAAtC,EAA6C;AAACsB,MAAAA,OAAO,EAAE;AAAV,KAA7C,CAAvB;AAEA,WAAOH,QAAQ,CAACJ,IAAhB;AACH,GAJD,CAIE,OAAOQ,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,GAApB;AACA,WAAOG,OAAO,CAACC,MAAR,CAAeJ,GAAf,CAAP;AACH;AACJ;;KA5Bc5B,c;AA8Bf,eAAeA,cAAf","sourcesContent":["import axios from \"axios\";\nimport {AppZaloPayConfig} from \"../../lib/config/keys\";\n\nconst moment = require('moment');\n\nconst CryptoJS = require('crypto-js'); // npm install crypto-js\n// @ts-ignore\nasync function CreateOrderAPI(): Promise<any> {\n\n    const transID = Math.floor(Math.random() * 1000000); //yyMMdd_xxxx\n    const order = {\n        app_id: AppZaloPayConfig.AppId,\n        app_trans_id: `${moment().format('YYMMDD')}_${transID}`, // translation missing: vi.docs.shared.sample_code.comments.app_trans_id\n        app_user: \"user123\",\n        app_time: Date.now(), // miliseconds\n        item: '[]',\n        embed_data: '{}',\n        amount: 50000,\n        description: `ZaloPay - Payment for the order #${transID}`,\n        bank_code: \"zalopayapp\",\n        mac: \"\",\n    };\n\n    // appid|app_trans_id|appuser|amount|apptime|embeddata|item\n    const data = AppZaloPayConfig.AppId + \"|\" + order.app_trans_id + \"|\" + order.app_user + \"|\" + order.amount + \"|\" + order.app_time + \"|\" + order.embed_data + \"|\" + order.item;\n    order.mac = CryptoJS.HmacSHA256(data, AppZaloPayConfig.Key1).toString();\n\n    try {\n        const response = await axios.post(AppZaloPayConfig.Endpoint, order, {timeout: 3000});\n        \n        return response.data;\n    } catch (err) {\n        console.log(\"err:\", err)\n        return Promise.reject(err);\n    }\n}\n\nexport default CreateOrderAPI;\n"]},"metadata":{},"sourceType":"module"}