{"ast":null,"code":"const fetcher = async (path, init) => {\n  try {\n    const url = process.env.REACT_APP_ENDPOINT + path;\n    const response = await fetch(url, init); // console.log(\"fetcher logs data response: \", JSON.stringify(data, null, 2));\n\n    return await response.json();\n  } catch (err) {\n    console.log(\"API fetcher error: \", err);\n    return {\n      status: 500,\n      success: false,\n      message: \"Internal server\",\n      error: err.toString()\n    };\n  }\n};\n\nexport const loginWithEmail = async (userName, password) => {\n  return await fetcher(\"/auth/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username: userName,\n      password: password\n    })\n  });\n};","map":{"version":3,"sources":["/Users/lap12580/Documents/webInApp/src/lib/api/api.ts"],"names":["fetcher","path","init","url","process","env","REACT_APP_ENDPOINT","response","fetch","json","err","console","log","status","success","message","error","toString","loginWithEmail","userName","password","method","headers","body","JSON","stringify","username"],"mappings":"AAUA,MAAMA,OAAO,GAAG,OACdC,IADc,EAEdC,IAFc,KAGY;AAC1B,MAAI;AACF,UAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GAAiCL,IAA7C;AACA,UAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAMD,IAAN,CAA5B,CAFE,CAGF;;AAEA,WAAO,MAAMK,QAAQ,CAACE,IAAT,EAAb;AACD,GAND,CAME,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,GAAnC;AACA,WAAO;AACLG,MAAAA,MAAM,EAAE,GADH;AAELC,MAAAA,OAAO,EAAE,KAFJ;AAGLC,MAAAA,OAAO,EAAE,iBAHJ;AAILC,MAAAA,KAAK,EAAEN,GAAG,CAACO,QAAJ;AAJF,KAAP;AAMD;AACF,CAnBD;;AAqBA,OAAO,MAAMC,cAAc,GAAG,OAC5BC,QAD4B,EAE5BC,QAF4B,KAGF;AAC1B,SAAO,MAAMpB,OAAO,CAAC,aAAD,EAAgB;AAClCqB,IAAAA,MAAM,EAAE,MAD0B;AAElCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFyB;AAKlCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,QAAQ,EAAEP,QAAZ;AAAsBC,MAAAA,QAAQ,EAAEA;AAAhC,KAAf;AAL4B,GAAhB,CAApB;AAOD,CAXM","sourcesContent":["interface ResponseData {\n  status: number;\n  success: boolean;\n  data?: any;\n  message?: string;\n  input?: any;\n  error?: any;\n  paging?: any;\n}\n\nconst fetcher = async (\n  path: string,\n  init: RequestInit\n): Promise<ResponseData> => {\n  try {\n    const url = process.env.REACT_APP_ENDPOINT + path;\n    const response = await fetch(url, init);\n    // console.log(\"fetcher logs data response: \", JSON.stringify(data, null, 2));\n\n    return await response.json();\n  } catch (err) {\n    console.log(\"API fetcher error: \", err);\n    return {\n      status: 500,\n      success: false,\n      message: \"Internal server\",\n      error: err.toString(),\n    };\n  }\n};\n\nexport const loginWithEmail = async (\n  userName: string,\n  password: string\n): Promise<ResponseData> => {\n  return await fetcher(\"/auth/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ username: userName, password: password }),\n  });\n};\n"]},"metadata":{},"sourceType":"module"}