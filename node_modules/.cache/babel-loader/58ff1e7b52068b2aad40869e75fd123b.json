{"ast":null,"code":"import axios from \"axios\";\nimport { AppZaloPayConfig } from \"../../lib/config/keys\";\n\nconst moment = require('moment');\n\nconst CryptoJS = require('crypto-js'); // npm install crypto-js\n// @ts-ignore\n\n\nasync function CreateOrderAPI() {\n  const config = {\n    app_id: 15111,\n    key1: \"1IViCAnn06yX4arMLDMscNRn1lIOIoW2\",\n    endpoint: \"https://sb-openapi.zalopay.vn/v2/create\"\n  };\n  const transID = Math.floor(Math.random() * 1000000); //yyMMdd_xxxx\n\n  const order = {\n    app_id: AppZaloPayConfig.AppId,\n    app_trans_id: `${moment().format('YYMMDD')}_${transID}`,\n    // translation missing: vi.docs.shared.sample_code.comments.app_trans_id\n    app_user: \"user123\",\n    app_time: Date.now(),\n    // miliseconds\n    item: '[]',\n    embed_data: '{}',\n    amount: 50000,\n    description: `ZaloPay - Payment for the order #${transID}`,\n    bank_code: \"zalopayapp\",\n    mac: \"\"\n  }; // appid|app_trans_id|appuser|amount|apptime|embeddata|item\n\n  const data = config.app_id + \"|\" + order.app_trans_id + \"|\" + order.app_user + \"|\" + order.amount + \"|\" + order.app_time + \"|\" + order.embed_data + \"|\" + order.item;\n  order.mac = CryptoJS.HmacSHA256(data, config.key1).toString();\n\n  try {\n    const response = await axios.post(config.endpoint, order, {\n      timeout: 3000\n    });\n    return response.data;\n  } catch (err) {\n    console.log(\"err:\", err);\n    return Promise.reject(err);\n  }\n}\n\n_c = CreateOrderAPI;\nexport default CreateOrderAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateOrderAPI\");","map":{"version":3,"sources":["/Users/lap12580/Documents/webInApp/src/components/createorder/create-order.tsx"],"names":["axios","AppZaloPayConfig","moment","require","CryptoJS","CreateOrderAPI","config","app_id","key1","endpoint","transID","Math","floor","random","order","AppId","app_trans_id","format","app_user","app_time","Date","now","item","embed_data","amount","description","bank_code","mac","data","HmacSHA256","toString","response","post","timeout","err","console","log","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,QAA+B,uBAA/B;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB,C,CAAuC;AACvC;;;AACA,eAAeE,cAAf,GAA8C;AAC1C,QAAMC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,IAAI,EAAE,kCAFK;AAGXC,IAAAA,QAAQ,EAAE;AAHC,GAAf;AAMA,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,CAAhB,CAP0C,CAOW;;AACrD,QAAMC,KAAK,GAAG;AACVP,IAAAA,MAAM,EAAEN,gBAAgB,CAACc,KADf;AAEVC,IAAAA,YAAY,EAAG,GAAEd,MAAM,GAAGe,MAAT,CAAgB,QAAhB,CAA0B,IAAGP,OAAQ,EAF5C;AAE+C;AACzDQ,IAAAA,QAAQ,EAAE,SAHA;AAIVC,IAAAA,QAAQ,EAAEC,IAAI,CAACC,GAAL,EAJA;AAIY;AACtBC,IAAAA,IAAI,EAAE,IALI;AAMVC,IAAAA,UAAU,EAAE,IANF;AAOVC,IAAAA,MAAM,EAAE,KAPE;AAQVC,IAAAA,WAAW,EAAG,oCAAmCf,OAAQ,EAR/C;AASVgB,IAAAA,SAAS,EAAE,YATD;AAUVC,IAAAA,GAAG,EAAE;AAVK,GAAd,CAR0C,CAqB1C;;AACA,QAAMC,IAAI,GAAGtB,MAAM,CAACC,MAAP,GAAgB,GAAhB,GAAsBO,KAAK,CAACE,YAA5B,GAA2C,GAA3C,GAAiDF,KAAK,CAACI,QAAvD,GAAkE,GAAlE,GAAwEJ,KAAK,CAACU,MAA9E,GAAuF,GAAvF,GAA6FV,KAAK,CAACK,QAAnG,GAA8G,GAA9G,GAAoHL,KAAK,CAACS,UAA1H,GAAuI,GAAvI,GAA6IT,KAAK,CAACQ,IAAhK;AACAR,EAAAA,KAAK,CAACa,GAAN,GAAYvB,QAAQ,CAACyB,UAAT,CAAoBD,IAApB,EAA0BtB,MAAM,CAACE,IAAjC,EAAuCsB,QAAvC,EAAZ;;AAEA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAM/B,KAAK,CAACgC,IAAN,CAAW1B,MAAM,CAACG,QAAlB,EAA4BK,KAA5B,EAAmC;AAACmB,MAAAA,OAAO,EAAE;AAAV,KAAnC,CAAvB;AACA,WAAOF,QAAQ,CAACH,IAAhB;AACH,GAHD,CAGE,OAAOM,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,GAApB;AACA,WAAOG,OAAO,CAACC,MAAR,CAAeJ,GAAf,CAAP;AACH;AACJ;;KAhCc7B,c;AAkCf,eAAeA,cAAf","sourcesContent":["import axios from \"axios\";\nimport {AppZaloPayConfig} from \"../../lib/config/keys\";\n\nconst moment = require('moment');\n\nconst CryptoJS = require('crypto-js'); // npm install crypto-js\n// @ts-ignore\nasync function CreateOrderAPI(): Promise<any> {\n    const config = {\n        app_id: 15111,\n        key1: \"1IViCAnn06yX4arMLDMscNRn1lIOIoW2\",\n        endpoint: \"https://sb-openapi.zalopay.vn/v2/create\"\n    };\n\n    const transID = Math.floor(Math.random() * 1000000); //yyMMdd_xxxx\n    const order = {\n        app_id: AppZaloPayConfig.AppId,\n        app_trans_id: `${moment().format('YYMMDD')}_${transID}`, // translation missing: vi.docs.shared.sample_code.comments.app_trans_id\n        app_user: \"user123\",\n        app_time: Date.now(), // miliseconds\n        item: '[]',\n        embed_data: '{}',\n        amount: 50000,\n        description: `ZaloPay - Payment for the order #${transID}`,\n        bank_code: \"zalopayapp\",\n        mac: \"\",\n    };\n\n    // appid|app_trans_id|appuser|amount|apptime|embeddata|item\n    const data = config.app_id + \"|\" + order.app_trans_id + \"|\" + order.app_user + \"|\" + order.amount + \"|\" + order.app_time + \"|\" + order.embed_data + \"|\" + order.item;\n    order.mac = CryptoJS.HmacSHA256(data, config.key1).toString();\n\n    try {\n        const response = await axios.post(config.endpoint, order, {timeout: 3000});\n        return response.data;\n    } catch (err) {\n        console.log(\"err:\", err)\n        return Promise.reject(err);\n    }\n}\n\nexport default CreateOrderAPI;\n"]},"metadata":{},"sourceType":"module"}