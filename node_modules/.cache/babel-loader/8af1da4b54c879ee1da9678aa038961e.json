{"ast":null,"code":"import axios from \"axios\";\n\nconst moment = require('moment');\n\nconst CryptoJS = require('crypto-js'); // npm install crypto-js\n// @ts-ignore\n\n\nfunction CreateOrderAPI() {\n  const config = {\n    app_id: \"15111\",\n    key1: \"1IViCAnn06yX4arMLDMscNRn1lIOIoW2\",\n    endpoint: \"https://sb-openapi.zalopay.vn/v2/create\"\n  };\n  const embed_data = '{}';\n  const items = '[]';\n  const transID = Math.floor(Math.random() * 1000000); //yyMMdd_xxxx\n\n  const order = {\n    app_id: config.app_id,\n    app_trans_id: `${moment().format('YYMMDD')}_${transID}`,\n    // translation missing: vi.docs.shared.sample_code.comments.app_trans_id\n    app_user: \"user123\",\n    app_time: Date.now(),\n    // miliseconds\n    item: JSON.stringify(items),\n    embed_data: JSON.stringify(embed_data),\n    amount: 50000,\n    description: `ZaloPay - Payment for the order #${transID}`,\n    bank_code: \"zalopayapp\",\n    mac: \"\"\n  }; // appid|app_trans_id|appuser|amount|apptime|embeddata|item\n\n  const data = config.app_id + \"|\" + order.app_trans_id + \"|\" + order.app_user + \"|\" + order.amount + \"|\" + order.app_time + \"|\" + order.embed_data + \"|\" + order.item;\n  order.mac = CryptoJS.HmacSHA256(data, config.key1).toString();\n  axios.post(config.endpoint, order, {\n    timeout: 3000\n  }).then(res => {\n    console.log(res);\n    return res.data;\n  }).catch(err => {\n    console.log(err);\n    return Promise.reject(err);\n  });\n}\n\n_c = CreateOrderAPI;\nexport default CreateOrderAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateOrderAPI\");","map":{"version":3,"sources":["/Users/lap12580/Documents/webInApp/src/components/createorder/create-order.tsx"],"names":["axios","moment","require","CryptoJS","CreateOrderAPI","config","app_id","key1","endpoint","embed_data","items","transID","Math","floor","random","order","app_trans_id","format","app_user","app_time","Date","now","item","JSON","stringify","amount","description","bank_code","mac","data","HmacSHA256","toString","post","timeout","then","res","console","log","catch","err","Promise","reject"],"mappings":"AAIA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB,C,CAAuC;AACvC;;;AAEI,SAASE,cAAT,GAAyC;AACrC,QAAMC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,OADG;AAEXC,IAAAA,IAAI,EAAE,kCAFK;AAGXC,IAAAA,QAAQ,EAAE;AAHC,GAAf;AAMA,QAAMC,UAAU,GAAG,IAAnB;AACA,QAAMC,KAAK,GAAG,IAAd;AACA,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,CAAhB,CATqC,CASgB;;AACrD,QAAMC,KAAK,GAAG;AACVT,IAAAA,MAAM,EAAED,MAAM,CAACC,MADL;AAEVU,IAAAA,YAAY,EAAG,GAAEf,MAAM,GAAGgB,MAAT,CAAgB,QAAhB,CAA0B,IAAGN,OAAQ,EAF5C;AAE+C;AACzDO,IAAAA,QAAQ,EAAE,SAHA;AAIVC,IAAAA,QAAQ,EAAEC,IAAI,CAACC,GAAL,EAJA;AAIY;AACtBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,KAAf,CALI;AAMVD,IAAAA,UAAU,EAAEc,IAAI,CAACC,SAAL,CAAef,UAAf,CANF;AAOVgB,IAAAA,MAAM,EAAE,KAPE;AAQVC,IAAAA,WAAW,EAAG,oCAAmCf,OAAQ,EAR/C;AASVgB,IAAAA,SAAS,EAAE,YATD;AAUVC,IAAAA,GAAG,EAAE;AAVK,GAAd,CAVqC,CAuBjC;;AACJ,QAAMC,IAAI,GAAGxB,MAAM,CAACC,MAAP,GAAgB,GAAhB,GAAsBS,KAAK,CAACC,YAA5B,GAA2C,GAA3C,GAAiDD,KAAK,CAACG,QAAvD,GAAkE,GAAlE,GAAwEH,KAAK,CAACU,MAA9E,GAAuF,GAAvF,GAA6FV,KAAK,CAACI,QAAnG,GAA8G,GAA9G,GAAoHJ,KAAK,CAACN,UAA1H,GAAuI,GAAvI,GAA6IM,KAAK,CAACO,IAAhK;AACAP,EAAAA,KAAK,CAACa,GAAN,GAAYzB,QAAQ,CAAC2B,UAAT,CAAoBD,IAApB,EAA0BxB,MAAM,CAACE,IAAjC,EAAuCwB,QAAvC,EAAZ;AAEA/B,EAAAA,KAAK,CAACgC,IAAN,CAAW3B,MAAM,CAACG,QAAlB,EAA4BO,KAA5B,EAAmC;AAACkB,IAAAA,OAAO,EAAE;AAAV,GAAnC,EACIC,IADJ,CACSC,GAAG,IAAG;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAQA,GAAG,CAACN,IAAZ;AAEH,GALJ,EAMIS,KANJ,CAMUC,GAAG,IAAE;AACRH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,WAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACH,GATJ;AAUP;;KArCYnC,c;AAuCb,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\n\nimport axios from \"axios\";\nconst moment = require('moment');\n\nconst CryptoJS = require('crypto-js'); // npm install crypto-js\n// @ts-ignore\n\n    function CreateOrderAPI() : Promise<any> {\n        const config = {\n            app_id: \"15111\",\n            key1: \"1IViCAnn06yX4arMLDMscNRn1lIOIoW2\",\n            endpoint: \"https://sb-openapi.zalopay.vn/v2/create\"\n        };\n\n        const embed_data = '{}';\n        const items = '[]';\n        const transID = Math.floor(Math.random() * 1000000); //yyMMdd_xxxx\n        const order = {\n            app_id: config.app_id,\n            app_trans_id: `${moment().format('YYMMDD')}_${transID}`, // translation missing: vi.docs.shared.sample_code.comments.app_trans_id\n            app_user: \"user123\",\n            app_time: Date.now(), // miliseconds\n            item: JSON.stringify(items),\n            embed_data: JSON.stringify(embed_data),\n            amount: 50000,\n            description: `ZaloPay - Payment for the order #${transID}`,\n            bank_code: \"zalopayapp\",\n            mac: \"\",\n        };\n\n            // appid|app_trans_id|appuser|amount|apptime|embeddata|item\n        const data = config.app_id + \"|\" + order.app_trans_id + \"|\" + order.app_user + \"|\" + order.amount + \"|\" + order.app_time + \"|\" + order.embed_data + \"|\" + order.item;\n        order.mac = CryptoJS.HmacSHA256(data, config.key1).toString();\n\n        axios.post(config.endpoint, order, {timeout: 3000})\n           .then(res=> {\n               console.log(res);\n               return  res.data;\n                \n           })\n           .catch(err=>{\n               console.log(err)\n               return Promise.reject(err);\n           }) ;\n}\n\nexport default CreateOrderAPI;\n"]},"metadata":{},"sourceType":"module"}