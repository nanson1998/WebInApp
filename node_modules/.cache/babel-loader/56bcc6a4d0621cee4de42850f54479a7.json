{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lap12580/Documents/WebviewAndroid/src/components/createorder/create-order.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { AppZaloPayConfig } from \"../../lib/config/keys\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { useFullPaymentStore } from \"./store\";\nimport Button from \"@material-ui/core/Button\";\nimport { Grid } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst moment = require('moment');\n\nconst CryptoJS = require('crypto-js'); // npm install crypto-js\n\n\nconst queryString = require('query-string');\n\nconst parsed = queryString.parse(window.location.search);\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    padding: \"3rem\"\n  },\n  form: {\n    width: \"100%\"\n  },\n  input: {\n    margin: \"20px 0\",\n    \"& input:valid + fieldset\": {\n      borderColor: \"#008fe5\",\n      borderWidth: 1\n    },\n    \"& input:focus + fieldset\": {\n      borderColor: \"#008fe5 !important\",\n      borderWidth: 1\n    },\n    \"& input:invalid + fieldset\": {\n      borderColor: \"#ff6767\",\n      borderWidth: 1\n    }\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  pay: {\n    padding: \"16px 0\",\n    boxShadow: \"none\",\n    backgroundColor: \"#008fe5\",\n    color: \"#f9f9f9\",\n    \"&:hover\": {\n      boxShadow: \"none\",\n      backgroundColor: \"#008fe5\",\n      color: \"#f9f9f9\"\n    }\n  },\n  clear: {\n    padding: \"16px 0\",\n    color: \"#6093ff\",\n    textTransform: \"inherit\"\n  }\n})); // @ts-ignore\n\nfunction CreateOrderAPI() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    app,\n    setAppID,\n    appUser,\n    setAppUser,\n    amount,\n    setAmount,\n    embedData,\n    setEmbedData,\n    item,\n    setItem,\n    mac,\n    setMac\n  } = useFullPaymentStore();\n  const [result, setResult] = useState(\"\");\n  const transID = Math.floor(Math.random() * 1000000); //yyMMdd_xxxx\n\n  useEffect(() => {\n    if (typeof parsed.appid === 'string') {\n      setAppID(parsed.appid);\n    }\n\n    if (typeof parsed.appuser === 'string') {\n      setAppUser(parsed.appuser);\n    }\n\n    if (typeof parsed.amount === 'string') {\n      setAmount(parsed.amount);\n    }\n\n    if (typeof parsed.embeddata === 'string') {\n      setEmbedData(parsed.embeddata);\n    }\n\n    if (typeof parsed.item === 'string') {\n      setItem(parsed.item);\n    }\n\n    if (typeof parsed.mac === 'string') {\n      setMac(parsed.mac);\n    }\n  }, []);\n\n  const handleAppOnChange = e => {\n    setAppID(e.target.value);\n  };\n\n  const handleAppUserChange = e => {\n    setAppUser(e.target.value);\n  };\n\n  const handleAmountChange = e => {\n    setAmount(e.target.value);\n  };\n\n  const handleEmbedDataChange = e => {\n    setEmbedData(e.target.value);\n  };\n\n  const handleItemChange = e => {\n    setItem(e.target.value);\n  };\n\n  const handleMacChange = e => {\n    setMac(e.target.value);\n  };\n\n  const order = {\n    app_id: parseInt(app),\n    app_trans_id: `${moment().format('YYMMDD')}_${transID}`,\n    // translation missing: vi.docs.shared.sample_code.comments.app_trans_id\n    app_user: appUser,\n    app_time: Date.now(),\n    // miliseconds\n    item: item,\n    embed_data: embedData,\n    amount: parseInt(amount),\n    description: `ZaloPay - Payment for the order #${transID}`,\n    mac: mac\n  }; // appid|app_trans_id|appuser|amount|apptime|embeddata|item\n\n  const data = order.app_id + \"|\" + order.app_trans_id + \"|\" + order.app_user + \"|\" + order.amount + \"|\" + order.app_time + \"|\" + order.embed_data + \"|\" + order.item;\n  order.mac = CryptoJS.HmacSHA256(data, AppZaloPayConfig.Key1).toString(); // try {\n  //     const response = axios.post(AppZaloPayConfig.Endpoint, order, {timeout: 3000});\n  //\n  //     return response.data;\n  // } catch (err) {\n  //     console.log(\"err:\", err)\n  //     return Promise.reject(err);\n  // }\n  // const response = axios.post(app,order,{timeout:3000});\n  //     let data =response.data;\n  //     console.log(data)\n\n  const handleOrder = async () => {\n    console.log(\"clicked\");\n    const orderAPI = await axios.post(AppZaloPayConfig.Endpoint, order, {\n      timeout: 3000\n    }).then(data => {\n      var _data$data;\n\n      console.log(\"response data\");\n      console.log(data);\n\n      if ((_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.order_url) {\n        window.location.href = data.data.order_url;\n      }\n    }); // console.log(\"orderAPI: \", JSON.stringify(orderAPI, null, 2));\n    // // @ts-ignore\n    // window.location.href = orderAPI[\"order_url\"].toString();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"flex-start\",\n    alignItems: \"center\",\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        style: {\n          margin: \"0 auto\"\n        },\n        onClick: () => handleOrder(),\n        children: \" CreateOrder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"app-input\",\n          required: true,\n          autoFocus: true,\n          type: \"number\",\n          label: \"App\",\n          value: app,\n          variant: \"outlined\",\n          fullWidth: true,\n          className: classes.input,\n          onChange: handleAppOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"app-user-input\",\n          required: true,\n          autoFocus: true,\n          type: \"string\",\n          label: \"AppUser\",\n          value: appUser,\n          variant: \"outlined\",\n          fullWidth: true,\n          className: classes.input,\n          onChange: handleAppUserChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"token-input\",\n          required: true,\n          label: \"Amount\",\n          value: amount,\n          variant: \"outlined\",\n          placeholder: \"token\",\n          fullWidth: true,\n          className: classes.input,\n          onChange: handleAmountChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"token-input\",\n          required: true,\n          label: \"EmbedData\",\n          value: embedData,\n          variant: \"outlined\",\n          placeholder: \"token\",\n          fullWidth: true,\n          className: classes.input,\n          onChange: handleEmbedDataChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"token-input\",\n          required: true,\n          label: \"Item\",\n          value: item,\n          variant: \"outlined\",\n          placeholder: \"token\",\n          fullWidth: true,\n          className: classes.input,\n          onChange: handleItemChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"token-input\",\n          required: true,\n          label: \"Mac\",\n          value: mac,\n          variant: \"outlined\",\n          placeholder: \"token\",\n          fullWidth: true,\n          className: classes.input,\n          onChange: handleMacChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        paddingTop: \"20px\",\n        color: \"#737373\"\n      },\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateOrderAPI, \"M/WlBKOOyMzjOxeZvbbd+hBU19w=\", false, function () {\n  return [useStyles, useFullPaymentStore];\n});\n\n_c = CreateOrderAPI;\nexport default CreateOrderAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateOrderAPI\");","map":{"version":3,"sources":["/Users/lap12580/Documents/WebviewAndroid/src/components/createorder/create-order.tsx"],"names":["React","useEffect","useState","axios","AppZaloPayConfig","createStyles","makeStyles","useFullPaymentStore","Button","Grid","TextField","moment","require","CryptoJS","queryString","parsed","parse","window","location","search","useStyles","theme","root","padding","form","width","input","margin","borderColor","borderWidth","spacing","pay","boxShadow","backgroundColor","color","clear","textTransform","CreateOrderAPI","classes","app","setAppID","appUser","setAppUser","amount","setAmount","embedData","setEmbedData","item","setItem","mac","setMac","result","setResult","transID","Math","floor","random","appid","appuser","embeddata","handleAppOnChange","e","target","value","handleAppUserChange","handleAmountChange","handleEmbedDataChange","handleItemChange","handleMacChange","order","app_id","parseInt","app_trans_id","format","app_user","app_time","Date","now","embed_data","description","data","HmacSHA256","Key1","toString","handleOrder","console","log","orderAPI","post","Endpoint","timeout","then","order_url","href","paddingTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {AppZaloPayConfig} from \"../../lib/config/keys\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {useFullPaymentStore} from \"./store\";\nimport Button from \"@material-ui/core/Button\";\nimport { Grid } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst moment = require('moment');\n\nconst CryptoJS = require('crypto-js'); // npm install crypto-js\nconst queryString = require('query-string');\nconst parsed = queryString.parse(window.location.search);\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: \"3rem\",\n        },\n        form: {\n            width: \"100%\",\n        },\n        input: {\n            margin: \"20px 0\",\n            \"& input:valid + fieldset\": {\n                borderColor: \"#008fe5\",\n                borderWidth: 1,\n            },\n            \"& input:focus + fieldset\": {\n                borderColor: \"#008fe5 !important\",\n                borderWidth: 1,\n            },\n            \"& input:invalid + fieldset\": {\n                borderColor: \"#ff6767\",\n                borderWidth: 1,\n            },\n        },\n\n        margin: {\n            margin: theme.spacing(1),\n        },\n\n        pay: {\n            padding: \"16px 0\",\n            boxShadow: \"none\",\n            backgroundColor: \"#008fe5\",\n            color: \"#f9f9f9\",\n            \"&:hover\": {\n                boxShadow: \"none\",\n                backgroundColor: \"#008fe5\",\n                color: \"#f9f9f9\",\n            },\n        },\n        clear: {\n            padding: \"16px 0\",\n            color: \"#6093ff\",\n            textTransform: \"inherit\",\n        },\n    })\n);\n// @ts-ignore\nfunction CreateOrderAPI(){\n    const classes = useStyles();\n    const { app, setAppID, appUser, setAppUser,  amount, setAmount, embedData, setEmbedData, item, setItem,  mac, setMac } = useFullPaymentStore();\n    const [result, setResult] = useState<string>(\"\");\n    const transID = Math.floor(Math.random() * 1000000); //yyMMdd_xxxx\n    useEffect(() => {\n\n        if (typeof parsed.appid === 'string') {\n            setAppID(parsed.appid)\n        }\n        if (typeof parsed.appuser === 'string') {\n            setAppUser(parsed.appuser)\n        }\n        if (typeof parsed.amount === 'string') {\n            setAmount(parsed.amount)\n        }\n        if (typeof parsed.embeddata === 'string') {\n            setEmbedData(parsed.embeddata)\n        }\n        if (typeof parsed.item === 'string') {\n            setItem(parsed.item)\n        }\n        if (typeof parsed.mac === 'string') {\n            setMac(parsed.mac)\n        }\n    }, [])\n    const handleAppOnChange = (e: any) => {\n        setAppID(e.target.value);\n    };\n    const handleAppUserChange = (e: any) => {\n        setAppUser(e.target.value);\n    };\n    const handleAmountChange = (e: any) => {\n        setAmount(e.target.value);\n    };\n\n    const handleEmbedDataChange = (e: any) => {\n        setEmbedData(e.target.value);\n    };\n\n    const handleItemChange = (e: any) => {\n        setItem(e.target.value);\n    };\n\n    const handleMacChange = (e: any) => {\n        setMac(e.target.value);\n    };\n\n    const order = {\n        app_id: parseInt(app),\n        app_trans_id: `${moment().format('YYMMDD')}_${transID}`, // translation missing: vi.docs.shared.sample_code.comments.app_trans_id\n        app_user: appUser,\n        app_time: Date.now(), // miliseconds\n        item: item,\n        embed_data: embedData,\n        amount: parseInt(amount),\n        description: `ZaloPay - Payment for the order #${transID}`,\n        mac: mac,\n    };\n\n    // appid|app_trans_id|appuser|amount|apptime|embeddata|item\n    const data = order.app_id + \"|\" + order.app_trans_id + \"|\" + order.app_user + \"|\" + order.amount + \"|\" + order.app_time + \"|\" + order.embed_data + \"|\" + order.item;\n    order.mac = CryptoJS.HmacSHA256(data, AppZaloPayConfig.Key1).toString();\n\n    // try {\n    //     const response = axios.post(AppZaloPayConfig.Endpoint, order, {timeout: 3000});\n    //\n    //     return response.data;\n    // } catch (err) {\n    //     console.log(\"err:\", err)\n    //     return Promise.reject(err);\n    // }\n    // const response = axios.post(app,order,{timeout:3000});\n    //     let data =response.data;\n    //     console.log(data)\n\n    const handleOrder = async () => {\n        console.log(\"clicked\")\n        const orderAPI = await axios.post(AppZaloPayConfig.Endpoint, order, {timeout: 3000}).then((data) => {\n            console.log(\"response data\")\n            console.log(data)\n            if (data.data?.order_url) {\n                window.location.href = data.data.order_url\n            }\n        });\n        // console.log(\"orderAPI: \", JSON.stringify(orderAPI, null, 2));\n        // // @ts-ignore\n        // window.location.href = orderAPI[\"order_url\"].toString();\n    }\n\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n            className={classes.root}\n        >\n            <form\n                noValidate\n                autoComplete=\"off\"\n                className={classes.form}\n            >\n            <Button variant={\"outlined\"}\n                    style={{margin: \"0 auto\"}}\n\n                    onClick={() => handleOrder()}> CreateOrder\n            </Button>\n\n                <Grid item>\n                    <TextField\n                        id=\"app-input\"\n                        required\n                        autoFocus={true}\n                        type={\"number\"}\n                        label=\"App\"\n                        value={app}\n                        variant=\"outlined\"\n                        fullWidth\n                        className={classes.input}\n                        onChange={handleAppOnChange}\n                    />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"app-user-input\"\n                        required\n                        autoFocus={true}\n                        type={\"string\"}\n                        label=\"AppUser\"\n                        value={appUser}\n                        variant=\"outlined\"\n                        fullWidth\n                        className={classes.input}\n                        onChange={handleAppUserChange}\n                    />\n                </Grid>\n\n                <Grid item>\n                    <TextField\n                        id=\"token-input\"\n                        required\n                        label=\"Amount\"\n                        value={amount}\n                        variant=\"outlined\"\n                        placeholder={\"token\"}\n                        fullWidth\n                        className={classes.input}\n                        onChange={handleAmountChange}\n                    />\n                </Grid>\n\n                <Grid item>\n                    <TextField\n                        id=\"token-input\"\n                        required\n                        label=\"EmbedData\"\n                        value={embedData}\n                        variant=\"outlined\"\n                        placeholder={\"token\"}\n                        fullWidth\n                        className={classes.input}\n                        onChange={handleEmbedDataChange}\n                    />\n                </Grid>\n\n                <Grid item>\n                    <TextField\n                        id=\"token-input\"\n                        required\n                        label=\"Item\"\n                        value={item}\n                        variant=\"outlined\"\n                        placeholder={\"token\"}\n                        fullWidth\n                        className={classes.input}\n                        onChange={handleItemChange}\n                    />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"token-input\"\n                        required\n                        label=\"Mac\"\n                        value={mac}\n                        variant=\"outlined\"\n                        placeholder={\"token\"}\n                        fullWidth\n                        className={classes.input}\n                        onChange={handleMacChange}\n                    />\n                </Grid>\n            </form>\n            <p style={{ paddingTop: \"20px\", color: \"#737373\" }}>{result}</p>\n        </Grid>\n\n    );\n}\n\nexport default CreateOrderAPI;\n"]},"metadata":{},"sourceType":"module"}